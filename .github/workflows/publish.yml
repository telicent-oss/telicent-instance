# Build and push shared-workflows
on:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md
  workflow_dispatch:

jobs:
  get_variables:
    runs-on: ubuntu-latest
    outputs:
      app_name: ${{ steps.set_vars.outputs.app_name }}
      image_name: ${{ steps.set_vars.outputs.image_name }}
      version: ${{ steps.semver.outputs.current-version }}
    steps:
      - uses: actions/checkout@v3
      - id: semver
        uses: martinbeentjes/npm-get-version-action@main
      - run: sudo apt-get install jq
      - id: set_vars
        run: |
          APP_NAME=$(jq -r '.app_name' ./app.config.json)
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT
          IMAGE_NAME=$(jq -r '.image_name' ./app.config.json)
          echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT
  integrated_tests:
    permissions:
      id-token: write
      contents: read
      packages: write
    needs: get_variables
    env:
      APP_NAME: ${{ needs.get_variables.outputs.app_name }}
      NODE_AUTH_TOKEN: ${{ secrets.PACKAGE_PAT }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: configure-node
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Get node version
        id: node
        run: |
          echo "version=$(node -v)" >> $GITHUB_OUTPUT

      - name: Get node_modules cache
        uses: actions/cache@v3.0.2
        id: node_modules
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}-${{ steps.node.outputs.version }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      - name: Install dependencies
        run: LOCAL_MACHINE=false yarn install --frozen-lockfile
      - run: mkdir reports
      - run: yarn test:ci

  run_vulnerability_scan_on_repo:
    needs:
      - integrated_tests
      - get_variables
    uses: telicent-oss/shared-workflows/.github/workflows/vulnerability-scanning-on-repo.yml@TELFE-211/scan-secrets
    with:
      APP_NAME: ${{ needs.get_variables.outputs.app_name }}
    secrets: inherit

  publish_build_image_to_registries:
    needs:
      - get_variables
      - run_vulnerability_scan_on_repo 
    uses: telicent-oss/shared-workflows/.github/workflows/docker-push-to-registries.yml@TELFE-211/scan-secrets
    with:
      APP_NAME: ${{ needs.get_variables.outputs.app_name }}
      DOCKERFILE: Dockerfile.build
      PATH: .
      VERSION: ${{ needs.get_variables.outputs.version }}
      VERSION_SUFFIX: -build
      IMAGE_SUFFIX: -build
    secrets: inherit

  publish_deployment_image_to_registries:
    needs:
      - get_variables
      - publish_build_image_to_registries
    uses: telicent-oss/shared-workflows/.github/workflows/docker-push-to-registries.yml@TELFE-211/scan-secrets
    with:
      APP_NAME: ${{ needs.get_variables.outputs.app_name }}
      DOCKERFILE: Dockerfile
      PATH: .
      VERSION: ${{ needs.get_variables.outputs.version }}
      BUILD_ARGS: |
        APP_NAME=${{ needs.get_variables.outputs.app_name }}
        BASE_IMAGE=telicent/${{ needs.get_variables.outputs.image_name }}-build:${{ needs.get_variables.outputs.version }}-build
    secrets: inherit
