# Publish Node Telicent image to Amazon ECR
on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
      DOCKERFILE:
        required: true
        type: string
      PATH:
        required: true
        type: string
      VERSION:
        required: true
        type: string
      VERSION_SUFFIX:
        required: false
        type: string
      ECR_SUFFIX:
        required: false
        type: string
    secrets:
      NPM_TOKEN:
        required: false
      FONT_AWESOME_TOKEN:
        required: false
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS credentials from main account
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: arn:aws:iam::098669589541:role/GitHubDeploymentRole
          aws-region: eu-west-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up QEMU
        uses: docker/setup-qemu-action@master
        with:
          platforms: all
      - name: Setup Docker buildx
        id: buildx
        uses: docker/setup-buildx-action@master
      - name: Build, tag, and push image to Amazon ECR
        uses: docker/build-push-action@v2
        with:
          builder: ${{ steps.buildx.outputs.name }}
          context: .
          file: ${{ inputs.DOCKERFILE }}
          platforms: linux/amd64,linux/arm64,linux/ppc64le
          push: true
          tags: ${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }},${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:latest,${{ env.ECR_REGISTRY }}/${{ env.ECR_REPOSITORY }}:${{ inputs.VERSION }}${{ inputs.VERSION_SUFFIX }}
          build-args: |
            NPM_TOKEN=${{ secrets.NPM_TOKEN }}
            FONT_AWESOME_TOKEN=${{ secrets.FONT_AWESOME_TOKEN }}
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: telicent-${{ inputs.APP_NAME }}${{ inputs.ECR_SUFFIX }}
